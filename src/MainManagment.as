package{	import flash.ui.Keyboard;	import flash.events.KeyboardEvent;	import flash.display.MovieClip;	import flash.utils.Timer;	import flash.events.TimerEvent;	import flash.geom.Rectangle;	import LinkEngine;	import characterStatus;		public class MainManagment extends MovieClip {		var wizardObject:MovieClip;		var playerObject:MovieClip;		var wizardFollowTimer:Timer;		var camObject:MovieClip;		var linkEngin:LinkEngine;		var monsterGroup:Array;				var playerSetting:characterStatus;				public function MainManagment() {			// constructor code			playerObject = (root as MovieClip).player;			monsterGroup = new Array();						//var skillButton1 = (root as Button).addEventListener(MouseEvent.MOUSE_DOWN, jumpSkill);			var linkEngin:LinkEngine;						wizardObject = (root as MovieClip).wizard;			camObject	 = (root as MovieClip).cam;						playerSetting		  	  = new characterStatus(playerObject);			playerSetting.healthPoint = 30000;			playerSetting.health 	  = 30000;			playerSetting.powerPoint  = 550;//30;						var monster1:characterStatus = new characterStatus((root as MovieClip).monster1);			monster1.healthPoint = 1500;			monster1.health = 1500;			monster1.powerPoint = 100;			monster1.characterName = "TestMonster1";			monster1.backPoint = 900;						monsterGroup.push(monster1);						var monster2:characterStatus = new characterStatus((root as MovieClip).monster2);			monster2.healthPoint = 2500;			monster2.health = 2500;			monster2.characterName = "TestMonster2";			monster2.backPoint = 900;						monsterGroup.push(monster2);						var monster3:characterStatus = new characterStatus((root as MovieClip).monster3);			monster3.healthPoint = 3500;			monster3.health = 3500;			monster3.characterName = "TestMonster3";			monster3.backPoint = 900;						monsterGroup.push(monster3);						var blockArray:Array = objectGrouping("block");						linkEngin = new LinkEngine(root, playerSetting, monsterGroup, blockArray);			linkEngin.rightKeyUP = true;						wizardFollowTimer = new Timer(0);			wizardFollowTimer.addEventListener(TimerEvent.TIMER, wizardFollow);			wizardFollowTimer.start();						var heroAutoAttactTimer = new Timer(0);			heroAutoAttactTimer.addEventListener(TimerEvent.TIMER, heroAutoAttact);			heroAutoAttactTimer.start();						//stage.addEventListener(KeyboardEvent.KEY_DOWN, linkEngin.KeyDown);			//stage.addEventListener(KeyboardEvent.KEY_UP,   linkEngin.KeyUp);		}				function jumpSkill(e:MouseEvent)		{			linkEngin.spaceKeyUP	 		= true;			playerSetting.accelerationPoint = -playerSetting.jumpPoint; //점프!!			playerSetting.jumpSwitch 		= true;		}				public function wizardFollow(e:TimerEvent):void		{			wizardObject.x = wizardObject.x + 0.05*(playerObject.x-(wizardObject.x+200));			wizardObject.y = wizardObject.y + 0.05*(playerObject.y-(wizardObject.y+300));		}//function wizardFollow - 마법사가 따라다님				public function heroAutoAttact(e:TimerEvent):void		{			for(var i=0; i<monsterGroup.length; i++) {				var attactDistance = monsterGroup[i].characterObject.x - playerObject.x;				trace("거리 : "+ attactDistance);				if(attactDistance < 400 && playerSetting.nowState != "attact"){					trace("공격!!");					playerSetting.attackSwitch = true;					playerSetting.characterObject.gotoAndStop(3);					playerSetting.nowState = "attact";					break;				}			}		}//function wizardFollow - 마법사가 따라다님				public function objectGrouping(objectName:String):Array		{			var objectGroup:Array = new Array();			var i=1;			do{				if(root.hasOwnProperty(objectName+i) == false) break;				else										   objectGroup.push((root as MovieClip)[objectName+i]);				i++;			}while(1);						return objectGroup;		}				public function objectCount(objectName:String):Number		{			var i=1;			var objectCount=0;			do{				if(root.hasOwnProperty(objectName+i) == false) break;				else										   objectCount++;				i++;			}while(1);						return objectCount;		}//function objectCount- 무비클립의 오브젝트 수를 카운트 해주는 함수(오브젝트의 이름은 mon1 식으로 뒤에 숫자가 붙어야 한다, 1부터시작)	}	}