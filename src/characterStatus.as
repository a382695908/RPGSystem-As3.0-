package{	import flash.display.MovieClip;	import flash.events.TimerEvent;	import flash.utils.Timer;	public class characterStatus extends MovieClip{				var characterName = "";				//케릭터능력변수////////////////////////////////////////		var jumpPoint:Number			= 30;	    // 점프력		var healthPoint:Number			= 1;		// 생명력		var manaPoint:Number			= 1;		// 마나		var defensivePoint:Number		= 1;		// 방어력		var powerPoint:Number			= 1; 		// 힘		var speedPoint:Number			= 8;		// 속도		var weaponNumber:Number			= 1; 		// 착용무기		var notDamageTimeNumber:Number	= 1;		// 무적시간(피격시나 슈퍼아머스킬, 초단위)		var rating:String				= "boss"	// 등급 (normal-일반몬스터, boss-보스몬스터, player-플레이어)		///////////////////////////////////////////////////				//케릭터상태변수////////////////////////////////////////		var accelerationPoint:Number = 0;			// 가속도		var health:Number			 = 0;			// 남은생명력		var backPoint:Number		 = 0;			// 뒤로물러나는 위치		var nowState:String	  		 = "normal"		// 현재상태 ( normal-기본상태, poison-독, hit-맞음, superMan-무적 )		///////////////////////////////////////////////////		//스위치변수/////////////////////////////////////		var jumpSwitch	 = false;		var attackSwitch = false;		////////////////////////////////////////////////////				//타이머변수/////////////////////////////////////		var notDamageTimer:Timer = null;		////////////////////////////////////////////////////				var characterObject:MovieClip;		public function characterStatus(createCharacterObject)		{			characterObject = createCharacterObject;			health = healthPoint;		}// constructor				public function notDamageTimerStart()		{			if(notDamageTimer == null){				notDamageTimer = new Timer(0, notDamageTimeNumber*10);				notDamageTimer.addEventListener(TimerEvent.TIMER, notDamageTime);				notDamageTimer.start();			}		}//function notDamageTimerStart - 무적시간시작				private function notDamageTime(e:TimerEvent)		{			characterObject.x  = characterObject.x + 0.1*(backPoint-characterObject.x);						if( notDamageTimer.currentCount == notDamageTimer.repeatCount && notDamageTimer!=null ) {				nowState = "normal";				notDamageTimer.stop();				notDamageTimer.removeEventListener(TimerEvent.TIMER, notDamageTime);				notDamageTimer = null;			}		}//function notDamageTime - 무적시간 타이머				public function patton()		{		}//패턴	}	}